package io.github.krueger71.chip8j;

public class Main {
    public static void main(String[] args) {
        var chip8 = new Chip8(new byte[]{
            (byte) 0x00, (byte) 0xe0, (byte) 0xa2, (byte) 0x2a, (byte) 0x60, (byte) 0x0c, (byte) 0x61, (byte) 0x08, (byte) 0xd0, (byte) 0x1f, (byte) 0x70, (byte) 0x09,
            (byte) 0xa2, (byte) 0x39, (byte) 0xd0, (byte) 0x1f, (byte) 0xa2, (byte) 0x48, (byte) 0x70, (byte) 0x08, (byte) 0xd0, (byte) 0x1f, (byte) 0x70, (byte) 0x04,
            (byte) 0xa2, (byte) 0x57, (byte) 0xd0, (byte) 0x1f, (byte) 0x70, (byte) 0x08, (byte) 0xa2, (byte) 0x66, (byte) 0xd0, (byte) 0x1f, (byte) 0x70, (byte) 0x08,
            (byte) 0xa2, (byte) 0x75, (byte) 0xd0, (byte) 0x1f, (byte) 0x12, (byte) 0x28, (byte) 0xff, (byte) 0x00, (byte) 0xff, (byte) 0x00, (byte) 0x3c, (byte) 0x00,
            (byte) 0x3c, (byte) 0x00, (byte) 0x3c, (byte) 0x00, (byte) 0x3c, (byte) 0x00, (byte) 0xff, (byte) 0x00, (byte) 0xff, (byte) 0xff, (byte) 0x00, (byte) 0xff,
            (byte) 0x00, (byte) 0x38, (byte) 0x00, (byte) 0x3f, (byte) 0x00, (byte) 0x3f, (byte) 0x00, (byte) 0x38, (byte) 0x00, (byte) 0xff, (byte) 0x00, (byte) 0xff,
            (byte) 0x80, (byte) 0x00, (byte) 0xe0, (byte) 0x00, (byte) 0xe0, (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0xe0, (byte) 0x00,
            (byte) 0xe0, (byte) 0x00, (byte) 0x80, (byte) 0xf8, (byte) 0x00, (byte) 0xfc, (byte) 0x00, (byte) 0x3e, (byte) 0x00, (byte) 0x3f, (byte) 0x00, (byte) 0x3b,
            (byte) 0x00, (byte) 0x39, (byte) 0x00, (byte) 0xf8, (byte) 0x00, (byte) 0xf8, (byte) 0x03, (byte) 0x00, (byte) 0x07, (byte) 0x00, (byte) 0x0f, (byte) 0x00,
            (byte) 0xbf, (byte) 0x00, (byte) 0xfb, (byte) 0x00, (byte) 0xf3, (byte) 0x00, (byte) 0xe3, (byte) 0x00, (byte) 0x43, (byte) 0xe0, (byte) 0x00, (byte) 0xe0,
            (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0x80, (byte) 0x00, (byte) 0xe0, (byte) 0x00, (byte) 0xe0
        }, new Chip8.Quirks(false, false, false, false, false, false));
        var emujdk = new EmuJdk(chip8);

        emujdk.run();
    }
}
